<application>
  <component name="AppStorage">
    <histories>
      <item value="editor" />
      <item value="TypeError: 'NoneType' object is not iterable" />
      <item value="Date Time" />
      <item value="Key is invalid." />
      <item value="revoke token" />
      <item value="token auth" />
      <item value="bp" />
      <item value="basic auth" />
      <item value="HTTP Basic Auth" />
      <item value="timedelta" />
      <item value="token expiration" />
      <item value="Please use a different email address." />
      <item value="Please use a different username." />
      <item value="Please provide a valid username." />
      <item value="lease provide a valid username." />
      <item value="Please provide a valid email address." />
      <item value="new user" />
      <item value="Please provide a valid password." />
      <item value="valid" />
      <item value="avalid" />
      <item value="Please provide avalid username." />
      <item value="provide" />
      <item value="You must post JSON data'" />
      <item value="data" />
      <item value="endpoint" />
      <item value="total items" />
      <item value="total pages" />
      <item value="page" />
      <item value="per page" />
      <item value="query" />
      <item value="to collection dict" />
      <item value="to colleciton dict" />
      <item value="staticmethod" />
      <item value="Paginated API Mixin" />
      <item value="Init Flask-SQLAlchemy" />
      <item value="Init" />
      <item value="SQLALCHEMY TRACK MODIFICATIONS" />
      <item value="SQLALCHEMY DATABASE URI" />
      <item value="enable" />
      <item value="申请人" />
      <item value="yzf api data" />
      <item value="猫池服务" />
      <item value="审批" />
      <item value="Test From" />
      <item value="est From" />
      <item value="表单" />
      <item value="has prev" />
      <item value="提交人" />
      <item value="**NOTE** this validator used to be called `Required` but the way it behaved (requiring coerced data, not input data) meant it functioned in a way which was not symmetric to the `Optional` validator and furthermore caused confusion with certain fields which coerced data to 'falsey' values like ``0``, ``Decimal(0)``, ``time(0)`` etc. Unless a very specific reason exists, we recommend using the :class:`InputRequired` instead." />
      <item value="If the data is empty, also removes prior errors (such as processing errors) from the field." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="231" />
        <entry key="ENGLISH" value="232" />
        <entry key="ESTONIAN" value="2" />
        <entry key="DANISH" value="6" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>